{% trans_default_domain 'KreyuDataTable' %}

{# Base HTML Theme #}

{% block kreyu_data_table %}
    {% set stimulus_controllers = ['kreyu--data-table-bundle--state'] %}

    {% if has_batch_actions %}
        {% set stimulus_controllers = stimulus_controllers|merge(['kreyu--data-table-bundle--batch']) %}
    {% endif %}

    <turbo-frame id="kreyu_data_table_{{ name }}" target="_top">
        <div
            data-controller="{{ stimulus_controllers|join(' ') }}"
            data-kreyu--data-table-bundle--state-url-query-parameters-value="{{ url_query_parameters|default({})|json_encode(constant('JSON_FORCE_OBJECT')) }}"
        >
            {{ block('action_bar', theme) }}
            {{ block('kreyu_data_table_column_filters_form', theme) }}
            {{ block('table', theme) }}

            {% if pagination_enabled %}
                {{ data_table_pagination(pagination) }}
            {% endif %}
        </div>
    </turbo-frame>
{% endblock %}

{% block kreyu_data_table_form_aware %}
    {% deprecated 'The "kreyu_data_table_form_aware" block is deprecated. Instead of wrapping the data table with form, reference it by using the "form" HTML attribute.' %}

    {% set stimulus_controllers = ['kreyu--data-table-bundle--state'] %}

    {% if has_batch_actions %}
        {% set stimulus_controllers = stimulus_controllers|merge(['kreyu--data-table-bundle--batch']) %}
    {% endif %}

    <turbo-frame id="kreyu_data_table_{{ name }}" target="_top">
        <div
            data-controller="{{ stimulus_controllers|join(' ') }}"
            data-kreyu--data-table-bundle--state-url-query-parameters-value="{{ url_query_parameters|default({})|json_encode }}"
        >
            {{ block('action_bar', theme) }}

            {{ form_start(form, form_variables) }}
                {{ block('table', theme) }}
            {{ form_end(form, { render_rest: false }) }}

            {% if pagination_enabled %}
                {{ data_table_pagination(pagination) }}
            {% endif %}
        </div>
    </turbo-frame>
{% endblock %}

{% block kreyu_data_table_table %}
    {{ block('table', theme) }}
{% endblock %}

{% block kreyu_data_table_action_bar %}
    {{ block('action_bar', theme) }}
{% endblock %}

{% block action_bar %}{% endblock %}

{% block table %}
    <table {% with { attr: table_attr|default({}) } %}{{- block('attributes') -}}{% endwith %}>
        {{ block('table_head', theme) }}
        {{ block('table_body', theme) }}
    </table>
{% endblock %}

{% block table_head %}
    <thead>{{ block('table_head_row', theme) }}</thead>
{% endblock %}

{% block table_head_row %}
    {{ data_table_header_row(header_row) }}
{% endblock %}

{% block table_body %}
    <tbody>{{ block('table_body_row', theme) }}</tbody>
{% endblock %}

{% block table_body_row %}
    {% if value_rows|length > 0 %}
        {{ block('table_body_row_results', theme) }}
    {% else %}
        {{ block('table_body_row_no_results', theme) }}
    {% endif %}
{% endblock %}

{% block table_body_row_results %}
    {% for value_row in value_rows %}
        <tr {% with { attr: value_row.vars.attr } %}{{ block('attributes') }}{% endwith %}>{{ data_table_value_row(value_row) }}</tr>
    {% endfor %}
{% endblock %}

{% block table_body_row_no_results %}
    <tr>
        <td colspan="{{ column_count }}" {% with { attr: table_body_row_no_results_attr|default({}) } %}{{- block('attributes') -}}{% endwith %}>{{ 'No results found'|trans({}, 'KreyuDataTable') }}</td>
    </tr>
{% endblock %}

{% block pagination %}
    {{ data_table_pagination(pagination) }}
{% endblock %}

{% block kreyu_data_table_header_row %}
    <tr {% with { attr: row.vars.attr } %}{{ block('attributes') }}{% endwith %}>
        {% for column_header in row %}
            {{- data_table_column_header(column_header) -}}
        {% endfor %}
    </tr>
{% endblock %}

{% block kreyu_data_table_value_row %}
    {% for column_value in row %}
        <td>
            {{- data_table_column_value(column_value) -}}
        </td>
    {% endfor %}
{% endblock %}

{% block kreyu_data_table_column_label %}
    {% if translation_domain is not same as false %}
        <span>{{- label|trans(translation_parameters, translation_domain) -}}</span>
    {% else %}
        <span>{{- label -}}</span>
    {% endif %}
{% endblock %}

{% block kreyu_data_table_column_header -%}
    {{ data_table_theme_block(data_table, block_name) }}
{%- endblock %}

{% block kreyu_data_table_column_value -%}
    {{ data_table_theme_block(data_table, block_name) }}
{%- endblock %}

{% block kreyu_data_table_action %}
    {% if visible %}{{ data_table_theme_block(data_table, block_name) }}{% endif %}
{% endblock %}

{# Pagination #}

{% block kreyu_data_table_pagination %}
    {{ block('pagination_widget', theme) }}
{% endblock %}

{% block pagination_widget %}
    {{ block('pagination_counters', theme) }}

    {% if page_count > 1 %}
        {{ block('pagination_controls', theme) }}
    {% endif %}

    {{ block('pagination_per_page', theme) }}
{% endblock %}

{% block pagination_controls %}
    {%- if has_previous_page -%}
        {% with { path: data_table_pagination_url(data_table, 1) } %}
            {{ block('pagination_first', theme) }}
        {% endwith %}

        {% with { path: data_table_pagination_url(data_table, current_page_number - 1) } %}
            {{ block('pagination_previous', theme) }}
        {% endwith %}
    {%- else -%}
        {{ block('pagination_first_disabled', theme) }}
        {{ block('pagination_previous_disabled', theme) }}
    {%- endif -%}

    {% for page_number in range(first_visible_page_number, last_visible_page_number) %}
        {% if page_number == current_page_number %}
            {{ block('pagination_page_active', theme) }}
        {% else %}
            {% with { path: data_table_pagination_url(data_table, page_number) } %}
                {{ block('pagination_page', theme) }}
            {% endwith %}
        {% endif %}
    {% endfor %}

    {%- if has_next_page -%}
        {% with { path: data_table_pagination_url(data_table, current_page_number + 1) } %}
            {{ block('pagination_next', theme) }}
        {% endwith %}

        {% with { path: data_table_pagination_url(data_table, page_count) } %}
            {{ block('pagination_last', theme) }}
        {% endwith %}
    {%- else -%}
        {{ block('pagination_next_disabled', theme) }}
        {{ block('pagination_last_disabled', theme) }}
    {%- endif -%}
{% endblock %}

{% block pagination_per_page %}
    {% set choices = data_table.vars.per_page_choices %}

    {% if choices is not empty %}
        {{ block('pagination_per_page_message', theme) }}
        {{ block('pagination_per_page_form', theme) }}
    {% else %}
        <div></div>
    {% endif %}
{% endblock %}

{% block pagination_per_page_message 'Items per page'|trans %}

{% block pagination_per_page_form %}
    {% set form_attr = { 'data-turbo-frame': '_self' }|merge(form_attr ?? {}) %}

    <form {% with { attr: form_attr } %}{{ block('attributes') }}{% endwith %}>
        {% set url_query_parameters = [] %}

        {#
            Changing the "per page" parameter automatically changes page to the first one.
            You can disable this behavior by in your own theme that extends this one, for example:

            {% block pagination_per_page_form %}
                {% with { should_reset_to_first_page: false } %}
                    {{ parent() }}
                {% endwith %}
            {% endblock %}
        #}

        {% if should_reset_to_first_page ?? true %}
            {% set url_query_parameters = url_query_parameters|merge({ (data_table.vars.page_parameter_name): 1 }) %}
        {% endif %}

        {{ _self.array_to_form_inputs(url_query_parameters) }}

        {% set select_attr = {
            name: data_table.vars.per_page_parameter_name,
            onchange: 'this.form.requestSubmit()',
            autocomplete: 'off',
        }|merge(select_attr|default({})) %}

        <select {% with { attr: select_attr } %}{{ block('attributes') }}{% endwith %}>
            {% for choice in choices %}
                <option value="{{ choice }}"{{ item_number_per_page == choice ? ' selected' }}>{{ choice }}</option>
            {% endfor %}
        </select>
    </form>
{% endblock %}

{% block pagination_counters %}
    {% if total_item_count > 0 %}
        <span {{- block('attributes') -}}>
            {{- block('pagination_counters_message', theme) -}}
        </span>
    {% endif %}
{% endblock %}

{% block pagination_counters_message %}
    {{- 'Showing %current_page_first_item_index% - %current_page_last_item_index% of %total_item_count%'|trans({
        '%current_page_first_item_index%': current_page_first_item_index|number_format(0, '', ' '),
        '%current_page_last_item_index%': current_page_last_item_index|number_format(0, '', ' '),
        '%total_item_count%': total_item_count|number_format(0, '', ' ')
    }, 'KreyuDataTable') -}}
{% endblock %}

{% block pagination_page %}
    <a {% with { attr: attr|default({})|merge({ href: path, 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' }) } %}{{ block('attributes') }}{% endwith %}>
        {{ block('pagination_page_message', theme) }}
    </a>
{% endblock %}

{% block pagination_page_active %}
    <span {% with { attr: attr|default({})|merge({ 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' }) } %}{{ block('attributes') }}{% endwith %}>
        {{ block('pagination_page_message', theme) }}
    </span>
{% endblock %}

{% block pagination_page_message page_number %}

{% block pagination_first %}
    <a {% with { attr: attr|default({})|merge({ href: path, 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' }) } %}{{ block('attributes') }}{% endwith %}>
        {{ block('pagination_first_message', theme) }}
    </a>
{% endblock %}

{% block pagination_first_disabled %}
    <span {% with { attr: attr|default({})|merge({ 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' }) } %}{{ block('attributes') }}{% endwith %}>
        {{ block('pagination_first_message', theme) }}
    </span>
{% endblock %}

{% block pagination_first_message '«' %}

{% block pagination_previous %}
    <a {% with { attr: attr|default({})|merge({ href: path, 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' }) } %}{{ block('attributes') }}{% endwith %}>
        {{ block('pagination_previous_message', theme) }}
    </a>
{% endblock %}

{% block pagination_previous_disabled %}
    <span {{ block('attributes') }}>{{ block('pagination_previous_message', theme) }}</span>
{% endblock %}

{% block pagination_previous_message '‹' %}

{% block pagination_last %}
    <a {% with { attr: attr|default({})|merge({ href: path, 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' }) } %}{{ block('attributes') }}{% endwith %}>
        {{ block('pagination_last_message', theme) }}
    </a>
{% endblock %}

{% block pagination_last_disabled %}
    <span {{ block('attributes') }}>{{ block('pagination_last_message', theme) }}</span>
{% endblock %}

{% block pagination_last_message '»' %}

{% block pagination_next %}
    <a {% with { attr: attr|default({})|merge({ href: path, 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' }) } %}{{ block('attributes') }}{% endwith %}>
        {{ block('pagination_next_message', theme) }}
    </a>
{% endblock %}

{% block pagination_next_disabled %}
    <span {{ block('attributes') }}>{{ block('pagination_next_message', theme) }}</span>
{% endblock %}

{% block pagination_next_message '›' %}

{# Filtration #}

{% block kreyu_data_table_filters_form %}
    {% form_theme form with form_themes|default([_self]) %}

    {{ form_start(form, { attr: { 'data-turbo-action': 'advance', 'data-turbo-frame': '_self', 'hidden': 'hidden' } }) }}
        {# This form should be empty - all its inputs should be on the outside, referenced using the "form" attribute #}
    {{ form_end(form, { render_rest: false }) }}

    {% if form.count > 0 %}
        {{ block('filtration_widget', theme) }}
    {% endif %}

    {#
        Submitting a filtration form should keep current "per page" and change current page to the first one.
        You can disable this behavior by in your own theme that extends this one, for example:

        {% block kreyu_data_table_filters_form %}
            {% with { should_reset_to_first_page: false, should_keep_per_page: false } %}
                {{ parent() }}
            {% endwith %}
        {% endblock %}
    #}

    {% set data_table = form.vars.data_table_view %}

    {% if data_table.vars.pagination_enabled %}
        {% set url_query_parameters = [] %}

        {% if should_reset_to_first_page ?? true %}
            {% set url_query_parameters = url_query_parameters|merge({ (data_table.vars.page_parameter_name): 1 }) %}
        {% endif %}

        {% if should_keep_per_page ?? true %}
            {% set url_query_parameters = url_query_parameters|merge({
                (data_table.vars.per_page_parameter_name): data_table.vars.pagination.vars.item_number_per_page,
            }) %}
        {% endif %}

        {{ _self.array_to_form_inputs(url_query_parameters, { form: form.vars.id }) }}
    {% endif %}
{% endblock %}

{# Column filtration (per-column filters), independent from header filters #}
{% block kreyu_data_table_column_filters_form %}
    {% set form = data_table.vars.column_filtration_form|default(null) %}
    {% if form %}
        {% form_theme form with form_themes|default([_self]) %}
        {{ form_start(form, { attr: { 'data-turbo-action': 'advance', 'data-turbo-frame': '_self', 'hidden': 'hidden' } }) }}
        {{ form_end(form, { render_rest: false }) }}

        {% set data_table = form.vars.data_table_view %}
        {% if data_table.vars.pagination_enabled %}
            {% set url_query_parameters = [] %}
            {% if should_reset_to_first_page ?? true %}
                {% set url_query_parameters = url_query_parameters|merge({ (data_table.vars.page_parameter_name): 1 }) %}
            {% endif %}
            {% if should_keep_per_page ?? true %}
                {% set url_query_parameters = url_query_parameters|merge({ (data_table.vars.per_page_parameter_name): data_table.vars.pagination.vars.item_number_per_page }) %}
            {% endif %}
            {{ _self.array_to_form_inputs(url_query_parameters, { form: form.vars.id }) }}
        {% endif %}
    {% endif %}
{% endblock %}

{% block filtration_widget %}
    <div {{ block('attributes') }}>{{ block('filtration_form', theme) }}</div>
{% endblock %}

{% block filtration_form %}
    {{ block('filtration_form_content', theme) }}
{% endblock %}

{% block filtration_form_content %}
    <div {{ block('attributes') }}>
        {% for child in form %}
            {{ block('filtration_form_row', theme) }}
        {% endfor %}

        {{ block('filtration_form_submit', theme) }}
    </div>
{% endblock %}

{% block filtration_form_row %}
    <div {{ block('attributes') }}>{{ form_row(child) }}</div>
{% endblock %}

{% block filtration_form_submit %}
    <button {% with { attr: attr|default({})|merge({ form: form.vars.id, 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' }) } %}{{ block('attributes') }}{% endwith %}>
        {{ 'Filter'|trans({}, 'KreyuDataTable') }}
    </button>
{% endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Filter\Form\Type\DateRangeType #}
{% block kreyu_data_table_date_range_widget %}
    {{ form_widget(form.from) }}
    {{ form_widget(form.to) }}
{% endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\ColumnType #}
{% block column_header %}
    {% set label_attr = label_attr|default({}) %}

    {% if data_table.vars.sorting_enabled and sortable %}
        {% set active_attr = active_attr|default({}) %}
        {% set inactive_attr = inactive_attr|default({}) %}

        {% set sorted_attr = sorted ? active_attr : inactive_attr %}

        {# Merge the sorted attr with column header attr, but merge its classes. #}
        {# The column header attr class is added after the sorted attr class. #}
        {% set attr = attr|merge(sorted_attr|merge({
            class: (sorted_attr.class|default('') ~ ' ' ~ attr.class|default(''))|trim
        })) %}

        <th {{ block('attributes') }}>
            {% set label_attr = { href: data_table_column_sort_url(data_table, column) }|merge(label_attr) %}
            {% set label_attr = { 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' }|merge(label_attr) %}

            <a {% with { attr: label_attr } %}{{- block('attributes') -}}{% endwith %}>
                {{- block('column_header_label', theme, _context) -}}

                {% if sorted %}
                    {% if sort_direction == 'asc' %}
                        {{ block('sort_arrow_asc', theme, _context) }}
                    {% else %}
                        {{ block('sort_arrow_desc', theme, _context) }}
                    {% endif %}
                {% else %}
                    {{ block('sort_arrow_none', theme, _context) }}
                {% endif %}
            </a>
            {# Inline column filter input (optional) - also render for sortable columns #}
            {% if data_table.vars.filtration_enabled and filter %}
                {% set column_form = data_table.vars.column_filtration_form|default(null) %}
                {% if column_form %}
                    {% set filter_name = header_filter_name|default(name) %}
{#                    {% set filter_child_name = filter_name|replace({'.':'__'}) %}#}
                    {% if attribute(column_form, filter_name, [], 'any', true, true) is defined %}
                        <div class="dtb-column-filter">
                            {# Prefer rendering the value field for compactness; if not available, render whole child #}
                            {% set child = attribute(column_form, filter_name) %}
                            {% if attribute(child, 'value', [], 'any', true, true) is defined %}
                                {{ form_widget(child.value, { attr: { form: column_form.vars.id, 'data-turbo-action': 'advance', 'data-turbo-frame': '_self', onchange: 'this.form.requestSubmit()' } }) }}
                            {% else %}
                                {{ form_widget(child, { attr: { form: column_form.vars.id, 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' } }) }}
                            {% endif %}
                        </div>
                    {% endif %}
                {% endif %}
            {% endif %}
        </th>
    {% else %}
        <th {{ block('attributes') }}>
            <span {% with { attr: label_attr } %}{{- block('attributes') -}}{% endwith %}>
                {{- block('column_header_label', theme, _context) -}}
            </span>
            {# Inline column filter input (optional) #}
            {% if data_table.vars.filtration_enabled and filter %}
                {% set column_form = data_table.vars.column_filtration_form|default(null) %}
                {% if column_form %}
                    {% set filter_name = header_filter_name|default(name) %}
                    {% set filter_child_name = filter_name|replace({'.':'__'}) %}
                    {% if attribute(column_form, filter_child_name, [], 'any', true, true) is defined %}
                        <div class="dtb-column-filter">
                            {# Prefer rendering the value field for compactness; if not available, render whole child #}
                            {% set child = attribute(column_form, filter_child_name) %}
                            {% if attribute(child, 'value', [], 'any', true, true) is defined %}
                                {{ form_widget(child.value, { attr: { form: column_form.vars.id, 'data-turbo-action': 'advance', 'data-turbo-frame': '_self', onchange: 'this.form.requestSubmit()' } }) }}
                            {% else %}
                                {{ form_widget(child, { attr: { form: column_form.vars.id, 'data-turbo-action': 'advance', 'data-turbo-frame': '_self' } }) }}
                            {% endif %}
                        </div>
                    {% endif %}
                {% endif %}
            {% endif %}
        </th>
    {% endif %}
{% endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\ColumnType #}
{% block column_header_label %}
    {% if translation_domain is not same as false %}
        <span>{{- label|trans(translation_parameters, translation_domain) -}}</span>
    {% else %}
        <span>{{- label -}}</span>
    {% endif %}
{% endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\ColumnType #}
{% block column_value -%}
    <span{{ _self.attributes(attr) }}>
        {%- if translatable -%}
            {%- if is_instance_of_translatable -%}
                {# @var value Symfony\Contracts\Translation\TranslatableInterface #}
                {{- translation_key|trans -}}
            {%- else -%}
                {{- translation_key|trans(translation_parameters, translation_domain) -}}
            {%- endif -%}
        {%- else -%}
            {{- value -}}
        {%- endif -%}
    </span>
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\TextColumnType #}
{% block column_text_value -%}
    {{- block('column_value') -}}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\NumberColumnType #}
{% block column_number_value -%}
    {# @var bool  use_intl_formatter - Determines whether the Intl formatter should be used #}
    {# @var array intl_formatter_options - Options used to configure the Intl formatter #}

    {% if value is not null and use_intl_formatter %}
        {% set value = value|format_number(intl_formatter_options.attrs, intl_formatter_options.style) %}
    {% endif %}

    {{- block('column_text_value') -}}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\MoneyColumnType #}
{% block column_money_value -%}
    {# @var bool    use_intl_formatter - Determines whether the Intl formatter should be used #}
    {# @var array   intl_formatter_options - Options used to configure the Intl formatter #}
    {# @var string  currency #}

    {% if value is not null and use_intl_formatter %}
        {% set value = value|format_currency(currency, intl_formatter_options.attrs) %}
    {% endif %}

    {{- block('column_text_value') -}}

    {% if value is not null and not use_intl_formatter %}
        {{ currency }}
    {% endif %}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\LinkColumnType #}
{% block column_link_value -%}
    <a {% with { attr: { href, target }|filter(v => v != null)|merge(attr) } %}{{- block('attributes') -}}{% endwith %}>
        {{- block('column_text_value') -}}
    </a>
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\HtmlColumnType #}
{% block column_html_value -%}
    {% if strip_tags %}
        {% set value = value|striptags(allowed_tags) %}
    {% endif %}

    {{ raw ? value|raw : value }}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\IconColumnType #}
{% block column_icon_value -%}
    {{- data_table_theme_block(data_table, 'icon') -}}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\DateColumnType #}
{% block column_date_value -%}
    {% with { value: value ? value|date(format, timezone) : value } %}
        {{- block('column_text_value') -}}
    {% endwith %}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\DateTimeColumnType #}
{% block column_date_time_value -%}
    {% with { value: value ? value|date(format, timezone) : value } %}
        {{- block('column_text_value') -}}
    {% endwith %}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\DatePeriodColumnType #}
{% block column_date_period_value -%}
    {% with { value: value ? value.start|date(format, timezone) ~ separator ~ value.end|date(format, timezone) : value } %}
        {{- block('column_text_value') -}}
    {% endwith %}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\BooleanColumnType #}
{% block column_boolean_value -%}
    {{- block('column_text_value') -}}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\CollectionColumnType #}
{% block column_collection_value -%}
    {% for child in children -%}
        {{- data_table_column_value(child) -}}
        <span>
            {%- if not loop.last -%}
                {%- if separator_translatable -%}
                    {%- set separator = separator|trans -%}
                {%- endif -%}

                {{ separator_html ? separator|raw : separator }}
            {%- endif -%}
        </span>
    {%- endfor %}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\TemplateColumnType #}
{% block column_template_value -%}
    {{- include(template_path, template_vars) -}}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\ActionsColumnType #}
{% block column_actions_value -%}
    {% for action in actions %}
        {{ data_table_action(action) }}
    {% endfor %}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\FormColumnType #}
{% block column_form_value -%}
    {% if form_child_path is not same as false %}
        {% set form = form[row_index][form_child_path].createView() %}
    {% else %}
        {% set form = form[row_index].createView() %}
    {% endif %}

    {% set form_themes = form_themes|default(null) %}

    {% if form_themes is not null %}
        {% form_theme form with form_themes %}
    {% endif %}

    {{ form_widget(form) }}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\CheckboxColumnType #}
{% block column_checkbox_header -%}
    <th{{ _self.attributes(attr) }}>
        {% set input_attr = {
            'type': 'checkbox',
            'aria-label': 'Select all checkbox',
            'data-identifier-name': identifier_name,
            'data-kreyu--data-table-bundle--batch-target': 'selectAllCheckbox',
            'data-action': 'input->kreyu--data-table-bundle--batch#selectAll'
        }|merge(input_attr|default({})) %}

        <input{{ _self.attributes(input_attr) }}>
    </th>
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Column\Type\CheckboxColumnType #}
{% block column_checkbox_value -%}
    {% set input_attr = {
        'type': 'checkbox',
        'value': value,
        'aria-label': 'Select all checkbox',
        'data-index': row.index,
        'data-identifier-name': identifier_name,
        'data-kreyu--data-table-bundle--batch-target': 'selectRowCheckbox',
        'data-action': 'input->kreyu--data-table-bundle--batch#selectRow'
    }|merge(input_attr|default({})) %}

    <input{{ _self.attributes(input_attr) }}>
{%- endblock %}

{# Action type templates #}

{# @see Kreyu\Bundle\DataTableBundle\Action\Type\ActionType #}
{% block action_control -%}
    {%- if icon %}{{ data_table_theme_block(data_table, 'icon') }}{% endif -%}
    {{- label|trans(translation_parameters, translation_domain) -}}
{%- endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Action\Type\LinkActionType #}
{% block action_link_control %}
    {% set attr = { href, target }|filter(v => v != null)|merge(attr) %}
    {% set tag = tag ?? 'a' %}

    {% if batch %}
        {% set attr = { 'data-kreyu--data-table-bundle--batch-target': 'identifierHolder' }|merge(attr) %}
    {% endif %}

    <{{ tag }}{{ _self.attributes(attr) }}>
        {{- data_table_theme_block(data_table, 'action_control', resetAttr = true) -}}
    </{{ tag }}>
{% endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Action\Type\ButtonActionType #}
{% block action_button_control %}
    {% set attr = { href, target }|filter(v => v != null)|merge(attr) %}
    {% set tag = tag ?? 'a' %}

    {% if batch %}
        {% set attr = { 'data-kreyu--data-table-bundle--batch-target': 'identifierHolder' }|merge(attr) %}
    {% endif %}

    {# Button action should work like a link action styled to look like a button #}

    <{{ tag }}{{ _self.attributes(attr) }}>
        {{- data_table_theme_block(data_table, 'action_control', resetAttr = true) -}}
    </{{ tag }}>
{% endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Action\Type\FormActionType #}
{% block action_form_control %}
    {# @var string form_id - Unique identifier of the form #}
    {# @var string action - URL that the form will be submitted to #}
    {# @var string method - Form method, e.g. GET, POST, PATCH, PUT, DELETE #}
    {# @var string html_friendly_method - HTML-friendly form method, so only GET or POST #}

    {% set attr = { id: form_id, action, method: html_friendly_method }|merge(attr) %}

    {% if batch %}
        {% set attr = { 'data-kreyu--data-table-bundle--batch-target': 'identifierHolder' }|merge(attr) %}
    {% endif %}

    {% set button_tag = button_tag ?? 'button' %}
    {% set button_attr = { type: 'submit' }|merge(button_attr) %}

    {# Form action should work like a button action wrapped in a form to allow methods other than GET #}

    <form{{ _self.attributes(attr) }}>
        {% if method != html_friendly_method -%}
            <input type="hidden" name="_method" value="{{ method }}" />
        {%- endif -%}

        <{{ button_tag }}{{ _self.attributes(button_attr) }}>
            {{- data_table_theme_block(data_table, 'action_control', resetAttr = true) -}}
        </{{ button_tag }}>
    </form>
{% endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Action\Type\ModalActionType #}
{% block action_modal_control %}
    {# @var string href - URL that will respond with the modal contents #}

    {% set attr = { href }|filter(v => v != null)|merge(attr) %}

    {% if batch %}
        {% set attr = { 'data-kreyu--data-table-bundle--batch-target': 'identifierHolder' }|merge(attr) %}
    {% endif %}

    {% set tag = tag ?? 'button' %}

    {# Themes that extend base theme should provide their own implementation of modal #}

    <{{ tag }}{{ _self.attributes(attr) }}>
        {{- data_table_theme_block(data_table, 'action_control', resetAttr = true) -}}
    </{{ tag }}>
{% endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Action\Type\Dropdown\DropdownActionType #}
{% block action_dropdown_control %}
    {# Themes that extend base theme should provide their own implementation of dropdown #}
    <button>
        {{- data_table_theme_block(data_table, 'action_control') -}}
    </button>
    <ul>
        {% for action in actions %}
            <li>{{ data_table_action(action) }}</li>
        {% endfor %}
    </ul>
{% endblock %}

{# @see Kreyu\Bundle\DataTableBundle\Action\Type\Dropdown\LinkDropdownItemActionType #}
{% block action_link_dropdown_item_control %}
    {% set attr = { href, target }|filter(v => v != null)|merge(attr|default({})) %}

    {% if not confirmation and batch %}
        {% set attr = { 'data-kreyu--data-table-bundle--batch-target': 'identifierHolder' }|merge(attr) %}
    {% endif %}

    {% set tag = tag ?? 'a' %}

    <{{ tag }}{{ _self.attributes(attr) }}>
        {{- data_table_theme_block(data_table, 'action_control', resetAttr = true) -}}
    </{{ tag }}>
{% endblock %}

{% block sort_arrow_none %}{% endblock %}

{% block sort_arrow_asc %}↑{% endblock %}

{% block sort_arrow_desc %}↓{% endblock %}

{# Renders HTML attributes. #}
{# If at least one attribute is present in "attr" variable, string will be prefixed with a single whitespace. #}
{# Attributes set to false will be filtered out. Setting an attribute to empty string or true renders it without value. #}
{# The "class" and "id" are the exception - passing them with empty string does not render them. #}
{% block attributes -%}
    {%- for key, value in attr|default({})|filter((value, key) => value is not same as false and ((key != 'class' and key != 'id') or value|length > 0)) -%}
        {{- loop.first ? ' ' -}}

        {%- if value|length == 0 or value is same as true -%}
            {{- key -}}
        {%- else -%}
            {{ key }}="{{ value }}"
        {%- endif -%}

        {{- not loop.last ? ' ' -}}
    {%- endfor -%}
{%- endblock %}

{# Renders HTML attributes. #}
{# Simply calls the "attributes" block. Macro can be used to improve readability. #}
{% macro attributes(attr) -%}
    {{- block('attributes') -}}
{%- endmacro %}

{# Transforms given array to form inputs. Supports nested arrays. #}
{# For example, ['foo' => ['bar' => 'baz']] will be rendered as:  #}
{# <input name="foo[bar]" value="baz">                            #}
{% macro array_to_form_inputs(input, attr = [], parent = null) %}
    {% for key, value in input %}
        {% if value is iterable %}
            {% if parent is not null %}
                {% set key = parent ~ '[' ~ key ~ ']' %}
            {% endif %}

            {{ _self.array_to_form_inputs(value, attr, key) }}
        {% else %}
            {% if parent is not null %}
                {% set key = '[' ~ key ~ ']' %}
            {% endif %}

            {% with { attr: { type: 'hidden' }|merge(attr|merge({ name: parent ~ key, value })) } %}
                <input {{ block('attributes') }}>
            {% endwith %}
        {% endif %}
    {% endfor %}
{% endmacro %}
